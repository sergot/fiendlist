services:
  # MongoDB service
  mongodb:
    image: mongo:latest
    container_name: fiendlist-mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./creatures.json:/docker-entrypoint-initdb.d/creatures.json
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    environment:
      - MONGO_INITDB_DATABASE=fiendlist
    networks:
      - fiendlist-network

  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: dev  # Use the dev stage for development
    container_name: fiendlist-backend
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - mongodb
    environment:
      - PORT=8080
      - MONGODB_URI=mongodb://mongodb:27017/fiendlist
      - JWT_SECRET=your_jwt_secret_key_change_in_production
      - CORS_ORIGIN=http://localhost:3000  # Allow requests from the frontend
    volumes:
      - ./backend:/app  # Mount the entire backend directory for hot reloading
      - ./creatures.json:/app/creatures.json
    networks:
      - fiendlist-network

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev  # Use the development Dockerfile
    container_name: fiendlist-frontend
    restart: always
    ports:
      - "3000:3000"  # Next.js uses port 3000 by default
    depends_on:
      - backend
    environment:
      - NEXT_PUBLIC_API_BASE_URL=http://backend:8080/api
    volumes:
      - ./frontend:/app  # Mount the entire frontend directory for hot reloading
      - /app/node_modules  # Use container's node_modules
    networks:
      - fiendlist-network

volumes:
  mongodb_data:

networks:
  fiendlist-network:
    driver: bridge 